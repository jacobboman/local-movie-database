Internet Movie Database

(*)Ett måste

# Actor /ska refaktureras till "Persons"
	- Name * (string)
	- Age
	- Country
	- Movies[movie] = [] *
	- CoverPhoto
	- Info
	-AddMovie() //för att en "actor" kan spela i flera "movies"
	Likadant som vi skapar våra "setters" måste vi skapa våra "getters" för att hämta ut information från våra egenskaper:
	-getName()
	-getAge()
	-getCountry()
	-getMovies() X
	-getPhoto()
	-getInfo()
	Vilka egenskaper ska mina artister kunna ändra?
	= Vi använder funktionen "set_egenskaper" för att mina "actors" ska kunna ändra sina egenskaper:
	-RemoveMovie() //för att en "actor" kan ta borts from en "movie"???
	-setName(string) 
	-setAge(int)
	-setCountry(string)
	-setPhoto(string - url)
	-setInfo(string)

	
# Director
	- Name *
	- Age
	- Country
	- Movies[movie] = [] *
	- CoverPhoto
	- Info
	- AddMovie() //för att en "director" kan dirigera flera "movies"
	"Get" info från "director"
	-getName()
	-getAge()
	-getCountry()
	-getMovies() X
	-getPhoto()
	-getInfo()
	Dessa egenskaper ska kunna ändras på mina "Directors":
	- RemoveMovie() //för att en "director" kan taborts från olika "movies" ???
	- setName()
	- setAge()
	- setCountry()
	- setPhoto()N
	- setInfo()

# Producer
	- Name *
	- Country
	- Movies[movie] = [] *
	- CoverPhoto
	- Info
	- AddMovie() //för att en "producer" kan producera flera "movies"
	"Get" info från "producer"
	-getName()
	-getCountry()
	-getMovies() X
	-getPhoto()
	-getInfo()
	Dessa egenskaper ska kunna ändras på mina "producers":
	- RemoveMovie() //för att en "producer" kan taborts från olika "movies" ???
	- setName()
	- setCountry()
	- setPhoto()N
	- setInfo()

# Movie
	- MovieName * 
	- Genres[genre] 
	- Types[type]
	- Year *
	- Countries[country] *
	- Languages[language]
	- Length *
	- Actors[actor] *
	- Directors[director] *
	- Producers[producer]*
	- CoverPhoto
	- MovieURL
	- Info
	- addActor()
	- removeActor()
	- addDirector()
	- removeDirector()
	- addProducer()
	- removeProducer()
	- addLanguage()
	- removeLanguage()
	Vi skapar en "getter" till "MovieName" för att hämta ut informationen, alltså, vi ska kunna göra detta utan att ändra på det och därför har vi EJ skapat någon "setter".
	-getName()
	-getGenre()
	-getType()
	-getYear()
	-getCountry()
	-getLanguage()
	-getLength()
	-getActors()
	-getDirectors()
	-getProducers()
	-getPhoto()
	-getMovieURL()
	-getInfo()
	Dessa egenskaper ska kunna ändras på mina "movies"
	- setGenre()
	- setType()
	- setLanguage()
	- setCoverPhoto()
	- setMvieURL()
	- setInfo()

# Movielist
	- User *
	- MovielistName *
	- Movies[movie] = []
	- Public
	- AddMovie() //för att en "user" kan lägga till flera "movies" i hans "movieList".
	Vi kommer använda "is" istället är "get" för "public" egenskap pga att vi kommer att returnera ett värde "false" eller "sant".
	- RemoveMovie() //för att en "user" kan tabort "movies" från hans "movieList" ???
	-getUser()
	-getName()
	-getMovies()
	-isPublic() 
	Dessa egenskaper ska kunna ändra på "user"s movielist:
	- setName() //För att "user" ska kunna ändra namn på sin personligalist men inte på själva "User" ska kunna ändra sitt "ID" därför anger vi detta som "tvingande egenskaper" i "constructor"
	- setMovies[movie] = [] //Vi ska behöva använda en annan "metod" för att kunna ändra på Users "movielist", annars kommer dessa överskrivas av det nya "movielist"
	- setPublic()

# User
	- Name
	- SubscriptionActive = False // Eftersom en "user" har inte skapat en subscription tills att han har bekräftat detta genom att tex betala.
	- Movielists[movielist] = []
	- createMovieList()
	- removeMovieList()
	Här ska även "is" användas istället än "get" på "subscription.." egenskap, detta för att kunna hämta enbart värdena "false/true" och ej hela objektet:
	-getName()
	-isSubscriptionActive()
	-getMovieList()
	Dessa egenskaper ska kunna ändras på min "User":
	- setName()
	- setSubscriptionActive()

